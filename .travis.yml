language: c
dist: trusty   # Travis build machine is Ubuntu Trusty 14.04 x64
sudo: required # A sudo enabled, full VM is used for building instead of a docker container

git:
  submodules: false

before_install:
  - sudo apt-get update -qq
  # Pre-reqs for building dsc
  - sudo apt-get install -qq pkg-config make bison g++ rpm librpm-dev libpam0g-dev libssl-dev libmysqlclient-dev

# Travis-CI automatically clones the Powershell-DSC-for-Linux repo since this is where this .travis.yml file is located
# We will ignore this clone and clone the superproject Build-Powershell-DSC-for-Linux as follows

install:
  - cd ..
  - git clone https://github.com/Microsoft/Build-Powershell-DSC-for-Linux.git ./Build-Powershell-DSC-for-Linux
  - cd ./Build-Powershell-DSC-for-Linux
  # change url from ssh to https for submodules, travis-ci cannot download a submodule that is on a public url.
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules 
  - git submodule update --init --recursive dsc omi pal
  - # Do the same for ostc-openssl
  - cd ..
  - git clone https://github.com/Microsoft/ostc-openssl.git ./ostc-openssl
  - cd ./ostc-openssl
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules 
  - git submodule update --init --recursive openssl-0.9.8 openssl-1.0.0
  - cd ../Build-Powershell-DSC-for-Linux

before_script:
  - git checkout master && git submodule foreach git checkout master
  - cd dsc
  # PR validation during check-in will be setup in github in the settings section of our repo
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then git fetch origin refs/pull/$TRAVIS_PULL_REQUEST/head ; git checkout FETCH_HEAD; fi 
  - cd build
  # pwd: /home/travis/build/Microsoft/Build-Powershell-DSC-for-Linux/dsc/build
  # Since 'build' is a keyword for travis-CI, change Makefile to substitute 'dsc/build' instead of 'build'
  - sed -i 's/(subst \/build,,$(CURDIR))/(subst dsc\/build,dsc,$(CURDIR))/' Makefile 

script:
  # Make and install ostc-openssl
  - cd ../../../ostc-openssl/openssl-0.9.8
  - ./config no-asm -fPIC --prefix=/usr/local_ssl_0.9.8 shared
  - make &&  sudo make install_sw
  - cd ../openssl-1.0.0
  - ./config --prefix=/usr/local_ssl_1.0.0 shared -no-ssl2 -no-ec -no-ec2m -no-ecdh
  - make depend && make && sudo make install_sw
  # Make Build-Powershell-DSC-for-Linux
  - cd ../../Build-Powershell-DSC-for-Linux/dsc/build
  - ./configure --enable-debug 
  - make
  - cd ../target
  - sudo dpkg -i omi-1.2.0.ssl_100.x64.deb dsc-1.1.1-499.ssl_100.x64.deb
  - sudo /opt/microsoft/dsc/Scripts/InstallModule.py ./nxComputerManagement_1.0.zip
  - sudo /opt/microsoft/dsc/Scripts/InstallModule.py ./nxMySQL_1.0.zip
  - sudo /opt/microsoft/dsc/Scripts/InstallModule.py ./nxNetworking_1.0.zip
  - cd /opt/microsoft/dsc/Scripts/2.6x-2.7x/Scripts/Tests/
  - sudo python ./test_nxProviders.py
